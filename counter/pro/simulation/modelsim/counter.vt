// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "06/20/2020 17:54:05"
                                                                                
// Verilog Test Bench template for design : counter
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ns/ 1 ns
module counter_vlg_tst();
// constants                                           

// test vector input registers
reg sys_clk;
reg sys_rst;
// wires                                               
wire led_out;

// assign statements (if any)                          
counter 
#(
  .CNT_MAX (25'd24)
 )
 counter_inst 
(
// port map - connection between master ports and signals/registers   
	.led_out(led_out),
	.sys_clk(sys_clk),
	.sys_rst(sys_rst)
);


initial                                                
begin 
  sys_clk <= 1'b1;
  sys_rst <= 1'b0;
  #20 
  sys_rst <= 1'b1;  
end  
                                                  
always  #10 sys_clk = ~sys_clk;                                                                                                 
endmodule

