// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "05/17/2020 12:22:05"
                                                                                
// Verilog Test Bench template for design : touch_led
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ps/ 1 ps
module touch_led_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk;
reg rst_n;
// wires                                               
wire led;
wire touch_key;

reg touch_key_value; 

assign touch_key = touch_key_value;
// assign statements (if any)                          
touch_led i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.led(led),
	.rst_n(rst_n),
	.touch_key(touch_key)
);
initial                                                
begin                                                  
   clk = 1'b0;
   rst_n = 1'b0;
   touch_key_value = 1'b0;
   
   #100  rst_n = 1'b1; 
   #1000 touch_key_value = 1'b1;
end                                                    
always  #10 clk = ~clk;  

                                           
                                                    
endmodule

